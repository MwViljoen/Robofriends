{"version":3,"sources":["reportWebVitals.js","Components/Card/Card.js","Components/CardList/CardList.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","Components/ErrorBoundry/ErrorBoundry.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","this","props","name","username","email","className","src","alt","Component","CardList","cardListMapped","robots","map","robot","id","length","SearchBox","type","placeholder","onChange","onSearch","Scroll","style","overflowY","border","height","borderRadius","children","ErrorBoundry","state","hasError","error","errorInfo","setState","App","searchField","filteredRobots","bind","event","filter","string","toLowerCase","includes","target","value","searchFiled","a","fetch","response","json","jsonData","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8FCYCQ,E,4JAfX,WACI,MAAgCC,KAAKC,MAA9BC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,MAEvB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,iBAAmDI,IAAI,UAC/D,gCACI,6BAAKL,IACL,4BAAIE,c,GATLI,aCkBJC,EAjBE,SAACR,GACd,IAAMS,EACF,8BACKT,EAAMU,OAAOC,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEIX,KAAMW,EAAMX,KACZC,SAAUU,EAAMV,SAChBC,MAAOS,EAAMT,OAHRS,EAAMC,SAS3B,OAAOb,EAAMU,OAAOI,OAAS,EAAIL,EAAiB,6CCFvCM,G,MAbG,SAACf,GACf,OACI,qBAAKI,UAAU,MAAf,SACI,uBACIY,KAAK,SACLC,YAAY,gBACZb,UAAU,mCACVc,SAAUlB,EAAMmB,eCCjBC,G,MARA,SAACpB,GACZ,OACI,qBAAKqB,MAAO,CAACC,UAAW,SAAUC,OAAO,4BAA8BC,OAAQ,QAASC,aAAc,OAAtG,SACKzB,EAAM0B,aCeJC,E,kDAlBX,WAAY3B,GAAQ,IAAD,8BACf,cAAMA,IACD4B,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBhC,KAAKiC,SAAS,CACVH,UAAU,M,oBAIlB,WACI,OAAO9B,KAAK6B,MAAMC,SAAW,iFAA2D9B,KAAKC,MAAM0B,a,GAfhFnB,aC6DZ0B,E,kDAvDX,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IACD4B,MAAQ,CACTlB,OAAQ,GACRwB,YAAa,GACbC,eAAgB,IAEpB,EAAKhB,SAAW,EAAKA,SAASiB,KAAd,gBAPD,E,4CAanB,SAASC,GACL,IAEMF,EAFSpC,KAAK6B,MAAMlB,OAEI4B,QAAO,SAACC,GAClC,OAAOA,EAAOtC,KAAKuC,cAAcC,SAASJ,EAAMK,OAAOC,MAAMH,kBAGjEzC,KAAKiC,SAAS,CACVY,YAAaP,EACbF,eAAgBA,M,sEAIxB,8BAAAU,EAAA,+EAE+BC,MAAM,8CAFrC,cAEcC,EAFd,gBAG+BA,EAASC,OAHxC,OAGcC,EAHd,OAIQlD,KAAKiC,SAAS,CACVtB,OAAQuC,EACRd,eAAgBc,IAN5B,kDASQC,QAAQC,IAAR,mCATR,0D,0EAaA,WACI,IAAOhB,EAAkBpC,KAAK6B,MAAvBO,eACP,OACI,sBAAK/B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,SAAUpB,KAAKoB,WAC1B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUT,OAAQyB,e,GAhDxB5B,aCAlB6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnE,M","file":"static/js/main.8789e32b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\r\nimport './cardStyles.css';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const {name, username, email} = this.props;\r\n\r\n        return (\r\n            <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img src={`https://robohash.org/${username}?size=200x200`} alt=\"robot\"/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './cardListStyles.css';\r\nimport Card from \"../Card/Card\";\r\n\r\nconst CardList = (props) => {\r\n    const cardListMapped = (\r\n        <div>\r\n            {props.robots.map((robot) => (\r\n                <Card\r\n                    key={robot.id}\r\n                    name={robot.name}\r\n                    username={robot.username}\r\n                    email={robot.email}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n    return props.robots.length > 0 ? cardListMapped : <h1>Loading...</h1>\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './searchBoxStyles.css';\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                type=\"Search\"\r\n                placeholder='Search Robots'\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                onChange={props.onSearch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: `4px solid rgba(0,0,0,0.2)`, height: '600px', borderRadius: '2px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ? <h1>OOOPS!!! Something unexpected/unwanted happened</h1> : this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport CardList from \"./Components/CardList/CardList\";\r\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\r\nimport Scroll from \"./Components/Scroll/Scroll\";\r\nimport ErrorBoundry from \"./Components/ErrorBoundry/ErrorBoundry\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            robots: [],\r\n            searchField: '',\r\n            filteredRobots: []\r\n        }\r\n        this.onSearch = this.onSearch.bind(this);\r\n    }\r\n\r\n    /* another way to avoid binding in constructor is to change the event into an arrow function\r\n    * onSearch = (event) => {} then the binding in constructor can be removed\r\n    * */\r\n    onSearch(event) {\r\n        const robots = this.state.robots;\r\n\r\n        const filteredRobots = robots.filter((string) => {\r\n            return string.name.toLowerCase().includes(event.target.value.toLowerCase());\r\n        });\r\n\r\n        this.setState({\r\n            searchFiled: event,\r\n            filteredRobots: filteredRobots\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n            const jsonData = await response.json();\r\n            this.setState({\r\n                robots: jsonData,\r\n                filteredRobots: jsonData\r\n            });\r\n        } catch (error) {\r\n            console.log(`Fetch Data error: ${error}`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {filteredRobots} = this.state;\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox onSearch={this.onSearch}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}