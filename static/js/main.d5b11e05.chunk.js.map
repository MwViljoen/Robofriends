{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","Components/ErrorBoundry/ErrorBoundary.js","reduxConstants/constants.js","App.js","actions/requestRobotsAction.js","actions/searchFieldAction.js","reportWebVitals.js","reducers/searchRobotReducer.js","reducers/requestRobotsReducer.js","reducers/index.js","index.js"],"names":["Card","props","name","username","email","className","src","alt","CardList","searchField","useSelector","state","searchRobots","requestRobots","isPending","error","cardListMapped","robots","map","robot","id","length","console","log","SearchBox","type","placeholder","onChange","onSearch","Scroll","style","overflowY","border","height","borderRadius","children","ErrorBoundary","hasError","errorInfo","this","setState","Component","CHANGE_SEARCH_FIELD","REQ_ROBOTS_PENDING","REQ_ROBOTS_SUCCESS","REQ_ROBOTS_FAILED","App","dispatch","useDispatch","useEffect","a","fetch","response","json","jsonData","payload","filtered","filter","string","toLowerCase","includes","event","text","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b11e05.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cardStyles.css';\r\n\r\nconst Card = (props) => {\r\n    const {name, username, email} = props;\r\n\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${username}?size=200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './cardListStyles.css';\r\nimport Card from \"../Card/Card\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst CardList = (props) => {\r\n    const searchField = useSelector(state => state.searchRobots.searchField);\r\n    const {isPending, error} = useSelector(state => state.requestRobots)\r\n\r\n    const cardListMapped = (\r\n        <div>\r\n            {props.robots.map((robot) => (\r\n                <Card\r\n                    key={robot.id}\r\n                    name={robot.name}\r\n                    username={robot.username}\r\n                    email={robot.email}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n    if(isPending){\r\n        return <h1>Loading...</h1>\r\n    }\r\n    else if(!isPending && props.robots.length > 0){\r\n        return cardListMapped;\r\n    }\r\n    else if(!isPending && props.robots.length < 1) {\r\n        return <h1>Could not find robot with search field \"{searchField}\"</h1>\r\n    }\r\n    else {\r\n        console.log(`Error rendering robots: print error ${error}`)\r\n        return <h1>Seems like this app needs a service</h1>\r\n    }\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './searchBoxStyles.css';\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                type=\"Search\"\r\n                placeholder='Search Robots'\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                onChange={props.onSearch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: `4px solid rgba(0,0,0,0.2)`, height: '600px', borderRadius: '2px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n// React has not yet implemented hooks for componentDidCatch\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ? <h1>OOOPS!!! Something unexpected/unwanted happened</h1> : this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQ_ROBOTS_PENDING = 'REQ_ROBOTS_PENDING';\r\nexport const REQ_ROBOTS_SUCCESS = 'REQ_ROBOTS_SUCCESS';\r\nexport const REQ_ROBOTS_FAILED = 'REQ_ROBOTS_FAILED';\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport CardList from \"./Components/CardList/CardList\";\r\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\r\nimport Scroll from \"./Components/Scroll/Scroll\";\r\nimport ErrorBoundary from \"./Components/ErrorBoundry/ErrorBoundary\";\r\n//Redux\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {setSearchField} from \"./actions/searchFieldAction\";\r\nimport {requestRobotsAction} from \"./actions/requestRobotsAction\";\r\n\r\n//Functional component using react hooks\r\nfunction App () {\r\n    const dispatch = useDispatch();\r\n    const searchField = useSelector(state => state.searchRobots.searchField);\r\n    const {robots} = useSelector(state => state.requestRobots)\r\n\r\n    useEffect(() => {\r\n        dispatch(requestRobotsAction())\r\n    }, [dispatch]);\r\n\r\n    const onSearchChange = (event) => {\r\n        dispatch(setSearchField(event.target.value))\r\n    }\r\n\r\n    const filtered = robots.filter((string) => {\r\n        return string.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return (\r\n        <div className='tc'>\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox onSearch={onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filtered}/>\r\n                </ErrorBoundary>\r\n            </Scroll>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n this was used before applying redux\r\n former method using hooks\r\n// getting promise warning more on this here\r\n        // https://reactjs.org/docs/hooks-faq.html#how-can-i-do-data-fetching-with-hooks\r\n        // https://www.robinwieruch.de/react-hooks-fetch-data\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n                const jsonData = await response.json();\r\n                setRobots(jsonData);\r\n            }\r\n            catch (error) {console.log(`Fetch Data error: ${error}`);}\r\n        }\r\n        fetchData();\r\n*/","import {REQ_ROBOTS_PENDING, REQ_ROBOTS_SUCCESS, REQ_ROBOTS_FAILED} from \"../reduxConstants/constants\";\r\n\r\nexport const requestRobotsAction = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: REQ_ROBOTS_PENDING});\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const jsonData = await response.json();\r\n        await dispatch({\r\n            type: REQ_ROBOTS_SUCCESS,\r\n            payload: jsonData\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REQ_ROBOTS_FAILED,\r\n            payload: error\r\n        })\r\n    }\r\n}","import { CHANGE_SEARCH_FIELD } from \"../reduxConstants/constants\";\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CHANGE_SEARCH_FIELD} from \"../reduxConstants/constants\";\r\n\r\nconst initialState = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobotsReducer = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            // {...state, searchField: action.payload} shorter way using destructuring\r\n            return Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","import {REQ_ROBOTS_PENDING, REQ_ROBOTS_SUCCESS, REQ_ROBOTS_FAILED} from \"../reduxConstants/constants\";\r\n\r\nconst initialState = {\r\n    robots: [],\r\n    isPending: false,\r\n    error: ''\r\n}\r\n\r\nexport const requestRobotsReducer = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case REQ_ROBOTS_PENDING:\r\n            return Object.assign({}, state, {\r\n                isPending: true\r\n            });\r\n        case REQ_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                robots: action.payload,\r\n                isPending: false\r\n            });\r\n        case REQ_ROBOTS_FAILED:\r\n            return Object.assign({}, state, {\r\n                error: action.payload,\r\n                isPending: false\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import {searchRobotsReducer} from \"./searchRobotReducer\";\r\nimport {requestRobotsReducer} from \"./requestRobotsReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    searchRobots: searchRobotsReducer,\r\n    requestRobots: requestRobotsReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './index.css';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware} from \"redux\";\nimport allReducers from \"./reducers/index\";\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(allReducers, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}